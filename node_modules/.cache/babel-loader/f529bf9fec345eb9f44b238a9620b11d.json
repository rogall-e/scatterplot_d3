{"ast":null,"code":"var _jsxFileName = \"/home/eike/Projects/d3/linear_plot_with_menu/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { csv, scaleLinear, extent, min, max, format } from 'd3';\nimport { useData } from './useData';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { Dropdown } from './Dropdown';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst menuHeight = 50;\nconst height = 600 - menuHeight;\nconst margin = {\n  top: 20,\n  right: 20,\n  bottom: 70,\n  left: 60\n};\nconst xAxisLabelOffset = 40;\nconst AxisOffset = 5;\nconst circleRadius = 5;\n\nconst App = () => {\n  _s();\n\n  const data = useData();\n  const attributes = [{\n    value: 'sepal_length',\n    label: 'Sepal Length'\n  }, {\n    value: 'sepal_width',\n    label: 'Sepal Width'\n  }, {\n    value: 'petal_length',\n    label: 'Petal Length'\n  }, {\n    value: 'petal_width',\n    label: 'Petal Width'\n  }, {\n    value: 'species',\n    label: 'Species'\n  }];\n  const initialXAttribute = 'petal_length';\n  const [xAttribute, setXAttribute] = useState(initialXAttribute);\n\n  const xValue = d => d[xAttribute];\n\n  const xAxisLabel = '{xAttribute} in [cm]';\n  const initialYAttribute = 'petal_width';\n  const [yAttribute, setYAttribute] = useState(initialYAttribute);\n\n  const yValue = d => d[yAttribute];\n\n  const yAxisLabel = 'Pepal Width in [cm]';\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n  const siFormat = format('.2s');\n\n  const xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\n\n  const xScale = scaleLinear().domain(extent(data, xValue)).range([0, innerWidth]).nice();\n  const yScale = scaleLinear().domain(extent(data, yValue)).range([innerHeight - 10, 0]).nice();\n  return /*#__PURE__*/_jsxDEV(\"container\", {\n    className: \"plot\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"x-select\",\n      children: \"Choose the x-Axis:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: attributes,\n      id: \"x-select\",\n      selectedValue: xAttribute,\n      onSelectedValueChange: setXAttribute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"y-select\",\n      children: \"Choose the y-Axis:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: attributes,\n      id: \"y-select\",\n      selectedValue: yAttribute,\n      onSelectedValueChange: setYAttribute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Iris Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"plot\",\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${margin.left}, ${margin.top})`,\n        children: [/*#__PURE__*/_jsxDEV(AxisBottom, {\n          xScale: xScale,\n          innerHeight: innerHeight,\n          tickFormat: xAxisTickFormat,\n          tickOffset: AxisOffset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"axis-label\",\n          textAnchor: \"middle\",\n          transform: 'rotate(-90)',\n          dy: -xAxisLabelOffset,\n          dx: -innerHeight / 2,\n          children: yAxisLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AxisLeft, {\n          yScale: yScale,\n          innerWidth: innerWidth,\n          tickOffset: AxisOffset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"axis-label\",\n          x: innerWidth / 2,\n          y: innerHeight + xAxisLabelOffset,\n          textAnchor: \"middle\",\n          children: xAxisLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marks, {\n          data: data,\n          xScale: xScale,\n          yScale: yScale,\n          xValue: xValue,\n          yValue: yValue,\n          tooltipFormat: xAxisTickFormat,\n          circleRadius: circleRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"aYe1js2dCnRKEUP7ybqMWrnNedo=\", false, function () {\n  return [useData];\n});\n\n_c = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 127,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/eike/Projects/d3/linear_plot_with_menu/src/index.js"],"names":["React","useState","useCallback","useEffect","ReactDOM","csv","scaleLinear","extent","min","max","format","useData","AxisBottom","AxisLeft","Marks","Dropdown","width","menuHeight","height","margin","top","right","bottom","left","xAxisLabelOffset","AxisOffset","circleRadius","App","data","attributes","value","label","initialXAttribute","xAttribute","setXAttribute","xValue","d","xAxisLabel","initialYAttribute","yAttribute","setYAttribute","yValue","yAxisLabel","innerHeight","innerWidth","siFormat","xAxisTickFormat","tickValue","replace","xScale","domain","range","nice","yScale","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { csv, scaleLinear, extent, min, max, format } from 'd3';\nimport { useData } from './useData';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { Dropdown } from './Dropdown';\nimport './style.css';\n\nconst width = 960;\nconst menuHeight = 50;\nconst height = 600 - menuHeight;\nconst margin = { top: 20, right: 20, bottom: 70, left: 60 };\nconst xAxisLabelOffset = 40;\nconst AxisOffset = 5;\nconst circleRadius = 5;\n\nconst App = () => {\n    const data = useData();\n\n    const attributes = [\n        { value: 'sepal_length', label: 'Sepal Length' },\n        { value: 'sepal_width', label: 'Sepal Width' },\n        { value: 'petal_length', label: 'Petal Length' },\n        { value: 'petal_width', label: 'Petal Width' },\n        { value: 'species', label: 'Species' }\n    ];\n\n    const initialXAttribute = 'petal_length'\n    const [xAttribute, setXAttribute] = useState(initialXAttribute);\n    const xValue = d => d[xAttribute];\n    const xAxisLabel = '{xAttribute} in [cm]';\n\n    const initialYAttribute = 'petal_width'\n    const [yAttribute, setYAttribute] = useState(initialYAttribute);\n    const yValue = d => d[yAttribute];\n    const yAxisLabel = 'Pepal Width in [cm]';\n\n    if (!data) {\n        return <div>Loading...</div>;\n    }\n\n    const innerHeight = height - margin.top - margin.bottom;\n    const innerWidth = width - margin.left - margin.right;\n\n\n\n\n\n    const siFormat = format('.2s');\n    const xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\n\n    const xScale = scaleLinear()\n        .domain(extent(data, xValue))\n        .range([0, innerWidth])\n        .nice();\n\n    const yScale = scaleLinear()\n        .domain(extent(data, yValue))\n        .range([innerHeight - 10, 0 ])\n        .nice();\n    \n\n    return(\n        <container className=\"plot\">\n            <label for=\"x-select\">Choose the x-Axis:</label>\n            <Dropdown \n                options={attributes}\n                id=\"x-select\"\n                selectedValue={xAttribute}\n                onSelectedValueChange={setXAttribute}\n            />\n            <label for=\"y-select\">Choose the y-Axis:</label>\n            <Dropdown \n                options={attributes}\n                id=\"y-select\"\n                selectedValue={yAttribute}\n                onSelectedValueChange={setYAttribute}\n            />\n            <h1 className=\"header\">Iris Dataset</h1>\n            <svg className=\"plot\" width={width} height={height}>\n                <g transform={`translate(${margin.left}, ${margin.top})`}>\n                    <AxisBottom \n                        xScale={xScale} \n                        innerHeight={innerHeight} \n                        tickFormat={xAxisTickFormat}\n                        tickOffset={AxisOffset}\n                        />\n                    <text\n                        className=\"axis-label\"\n                        textAnchor=\"middle\"\n                        transform={'rotate(-90)'}\n                        dy= {-xAxisLabelOffset}\n                        dx={-innerHeight / 2}\n                    >\n                        {yAxisLabel}\n                    </text>                \n                    <AxisLeft \n                        yScale={yScale} \n                        innerWidth={innerWidth} \n                        tickOffset={AxisOffset}\n                    />\n                    <text\n                        className=\"axis-label\"\n                        x={innerWidth / 2}\n                        y={innerHeight + xAxisLabelOffset}\n                        textAnchor=\"middle\"\n                    >\n                        {xAxisLabel}\n                    </text>\n                    <Marks \n                        data={data} \n                        xScale={xScale} \n                        yScale={yScale}\n                        xValue={xValue}\n                        yValue={yValue}\n                        tooltipFormat={xAxisTickFormat}\n                        circleRadius={circleRadius}\n                        />\n                </g>\n            </svg>\n        </container>\n        );\n    };\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}