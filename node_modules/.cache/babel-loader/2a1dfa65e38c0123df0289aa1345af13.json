{"ast":null,"code":"var _jsxFileName = \"/home/eike/Projects/d3/linear_plot_with_menu/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDropdown from 'react-dropdown';\nimport { csv, scaleLinear, extent, min, max, format, scaleOrdinal } from 'd3';\nimport { useData } from './useData';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { ColorLegend } from './ColorLegend';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst menuHeight = 50;\nconst height = 600 - menuHeight;\nconst margin = {\n  top: 20,\n  right: 200,\n  bottom: 70,\n  left: 60\n};\nconst xAxisLabelOffset = 40;\nconst AxisOffset = 5;\nconst circleRadius = 7;\nconsole.log(ReactDropdown);\nconst attributes = [{\n  value: 'sepal_length',\n  label: 'Sepal Length'\n}, {\n  value: 'sepal_width',\n  label: 'Sepal Width'\n}, {\n  value: 'petal_length',\n  label: 'Petal Length'\n}, {\n  value: 'petal_width',\n  label: 'Petal Width'\n}];\n\nconst getValue = value => {\n  for (let i = 0; i < attributes.length; i++) {\n    if (attributes[i].value === value) {\n      return attributes[i].label;\n    }\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const data = useData();\n  const initialXAttribute = 'petal_length';\n  const [xAttribute, setXAttribute] = useState(initialXAttribute);\n\n  const xValue = d => d[xAttribute];\n\n  const xAxisLabel = getValue(xAttribute);\n  const initialYAttribute = 'petal_width';\n  const [yAttribute, setYAttribute] = useState(initialYAttribute);\n\n  const yValue = d => d[yAttribute];\n\n  const yAxisLabel = getValue(yAttribute);\n\n  const colorValue = d => d.species;\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n  const siFormat = format('.2s');\n\n  const xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\n\n  const xScale = scaleLinear().domain(extent(data, xValue)).range([0, innerWidth]).nice();\n  const yScale = scaleLinear().domain(extent(data, yValue)).range([innerHeight - 10, 0]).nice();\n  const colorScale = scaleOrdinal().domain(data.map(colorValue)).range(['#2e4e57', '#336636', '#792112']);\n  return /*#__PURE__*/_jsxDEV(\"container\", {\n    className: \"plot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menus-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown-label\",\n        children: \"x-Axis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDropdown, {\n        options: attributes,\n        value: xAttribute,\n        onChange: ({\n          value\n        }) => setXAttribute(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown-label\",\n        children: \"x-Axis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDropdown, {\n        options: attributes,\n        value: yAttribute,\n        onChange: ({\n          value\n        }) => setYAttribute(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Iris Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"plot\",\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${margin.left}, ${margin.top})`,\n        children: [/*#__PURE__*/_jsxDEV(AxisBottom, {\n          xScale: xScale,\n          innerHeight: innerHeight,\n          tickFormat: xAxisTickFormat,\n          tickOffset: AxisOffset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"axis-label\",\n          textAnchor: \"middle\",\n          transform: 'rotate(-90)',\n          dy: -xAxisLabelOffset,\n          dx: -innerHeight / 2,\n          children: yAxisLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AxisLeft, {\n          yScale: yScale,\n          innerWidth: innerWidth,\n          tickOffset: AxisOffset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"axis-label\",\n          x: innerWidth / 2,\n          y: innerHeight + xAxisLabelOffset,\n          textAnchor: \"middle\",\n          children: xAxisLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marks, {\n          data: data,\n          xScale: xScale,\n          yScale: yScale,\n          xValue: xValue,\n          yValue: yValue,\n          colorScale: colorScale,\n          colorValue: colorValue,\n          tooltipFormat: xAxisTickFormat,\n          circleRadius: circleRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(${innerWidth - 10},0)`,\n          children: /*#__PURE__*/_jsxDEV(ColorLegend, {\n            colorScale: colorScale,\n            colorValue: colorValue,\n            circleRadius: circleRadius\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"aYe1js2dCnRKEUP7ybqMWrnNedo=\", false, function () {\n  return [useData];\n});\n\n_c = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 147,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/eike/Projects/d3/linear_plot_with_menu/src/index.js"],"names":["React","useState","useCallback","useEffect","ReactDOM","ReactDropdown","csv","scaleLinear","extent","min","max","format","scaleOrdinal","useData","AxisBottom","AxisLeft","Marks","ColorLegend","width","menuHeight","height","margin","top","right","bottom","left","xAxisLabelOffset","AxisOffset","circleRadius","console","log","attributes","value","label","getValue","i","length","App","data","initialXAttribute","xAttribute","setXAttribute","xValue","d","xAxisLabel","initialYAttribute","yAttribute","setYAttribute","yValue","yAxisLabel","colorValue","species","innerHeight","innerWidth","siFormat","xAxisTickFormat","tickValue","replace","xScale","domain","range","nice","yScale","colorScale","map","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDropdown from 'react-dropdown';\nimport { csv, scaleLinear, extent, min, max, format, scaleOrdinal } from 'd3';\nimport { useData } from './useData';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { ColorLegend } from './ColorLegend';\nimport './style.css';\n\nconst width = 960;\nconst menuHeight = 50;\nconst height = 600 - menuHeight;\nconst margin = { top: 20, right: 200, bottom: 70, left: 60 };\nconst xAxisLabelOffset = 40;\nconst AxisOffset = 5;\nconst circleRadius = 7;\n\nconsole.log(ReactDropdown)\n\nconst attributes = [\n    { value: 'sepal_length', label: 'Sepal Length' },\n    { value: 'sepal_width', label: 'Sepal Width' },\n    { value: 'petal_length', label: 'Petal Length' },\n    { value: 'petal_width', label: 'Petal Width' },\n];\n\nconst getValue = value => {\n    for( let i = 0; i < attributes.length; i++) {\n        if(attributes[i].value === value) {\n            return attributes[i].label;\n        }\n    }\n};\n\nconst App = () => {\n    const data = useData();\n\n    const initialXAttribute = 'petal_length'\n    const [xAttribute, setXAttribute] = useState(initialXAttribute);\n    const xValue = d => d[xAttribute];\n    const xAxisLabel = getValue(xAttribute);\n\n    const initialYAttribute = 'petal_width'\n    const [yAttribute, setYAttribute] = useState(initialYAttribute);\n    const yValue = d => d[yAttribute];\n    const yAxisLabel = getValue(yAttribute);\n\n    const colorValue = d => d.species;\n\n    if (!data) {\n        return <div>Loading...</div>;\n    }\n\n    const innerHeight = height - margin.top - margin.bottom;\n    const innerWidth = width - margin.left - margin.right;\n\n    const siFormat = format('.2s');\n    const xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\n\n    const xScale = scaleLinear()\n        .domain(extent(data, xValue))\n        .range([0, innerWidth])\n        .nice();\n\n    const yScale = scaleLinear()\n        .domain(extent(data, yValue))\n        .range([innerHeight - 10, 0 ])\n        .nice();\n    \n    const colorScale = scaleOrdinal()\n        .domain(data.map(colorValue))\n        .range(['#2e4e57', '#336636', '#792112']);\n\n    return(\n        <container className=\"plot\">\n            <div className=\"menus-container\">\n                <span className=\"dropdown-label\">x-Axis:</span>\n                <ReactDropdown\n                    options={attributes}\n                    value={xAttribute}\n                    onChange={({ value }) => setXAttribute(value)}\n                />\n                <span className=\"dropdown-label\">x-Axis:</span>\n                <ReactDropdown\n                    options={attributes}\n                    value={yAttribute}\n                    onChange={({ value }) => setYAttribute(value)}\n                />\n            </div>\n            <h1 className=\"header\">Iris Dataset</h1>\n            <svg className=\"plot\" width={width} height={height}>\n                <g transform={`translate(${margin.left}, ${margin.top})`}>\n                    <AxisBottom \n                        xScale={xScale} \n                        innerHeight={innerHeight} \n                        tickFormat={xAxisTickFormat}\n                        tickOffset={AxisOffset}\n                        />\n                    <text\n                        className=\"axis-label\"\n                        textAnchor=\"middle\"\n                        transform={'rotate(-90)'}\n                        dy= {-xAxisLabelOffset}\n                        dx={-innerHeight / 2}\n                    >\n                        {yAxisLabel}\n                    </text>                \n                    <AxisLeft \n                        yScale={yScale} \n                        innerWidth={innerWidth} \n                        tickOffset={AxisOffset}\n                    />\n                    <text\n                        className=\"axis-label\"\n                        x={innerWidth / 2}\n                        y={innerHeight + xAxisLabelOffset}\n                        textAnchor=\"middle\"\n                    >\n                        {xAxisLabel}\n                    </text>\n                    <Marks \n                        data={data} \n                        xScale={xScale} \n                        yScale={yScale}\n                        xValue={xValue}\n                        yValue={yValue}\n                        colorScale={colorScale}\n                        colorValue={colorValue}\n                        tooltipFormat={xAxisTickFormat}\n                        circleRadius={circleRadius}\n                    />\n                    <g transform={`translate(${innerWidth-10},0)`}>\n                        <ColorLegend \n                            colorScale={colorScale}\n                            colorValue={colorValue}\n                            circleRadius={circleRadius}\n                        />\n                    </g>\n                </g>\n            </svg>\n        </container>\n        );\n    };\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}