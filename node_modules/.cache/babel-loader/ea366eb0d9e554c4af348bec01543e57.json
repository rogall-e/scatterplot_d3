{"ast":null,"code":"var _jsxFileName = \"/home/eike/Projects/d3/linear_plot_with_menu/src/ColorLegend.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorLegend = ({\n  colorScale,\n  circleRadius,\n  tickSpacing = 20,\n  tickTextOffset = 10\n}) => colorScale.domain().map((domainValue, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"legend\",\n  transform: `translate(0, ${i * tickSpacing})`,\n  onMouseEnter: () => console.log(domainValue),\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    fill: colorScale(domainValue),\n    r: circleRadius\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: tickTextOffset,\n    dy: \".32em\",\n    children: domainValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 9\n}, this));\n_c = ColorLegend;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorLegend\");","map":{"version":3,"sources":["/home/eike/Projects/d3/linear_plot_with_menu/src/ColorLegend.js"],"names":["ColorLegend","colorScale","circleRadius","tickSpacing","tickTextOffset","domain","map","domainValue","i","console","log"],"mappings":";;AAAA,OAAO,MAAMA,WAAW,GAAG,CAAC;AACxBC,EAAAA,UADwB;AAExBC,EAAAA,YAFwB;AAGxBC,EAAAA,WAAW,GAAG,EAHU;AAIxBC,EAAAA,cAAc,GAAG;AAJO,CAAD,KAMvBH,UAAU,CAACI,MAAX,GAAoBC,GAApB,CAAwB,CAACC,WAAD,EAAcC,CAAd,kBACpB;AACI,EAAA,SAAS,EAAC,QADd;AAEI,EAAA,SAAS,EAAG,gBAAeA,CAAC,GAAGL,WAAY,GAF/C;AAGI,EAAA,YAAY,EAAE,MAAMM,OAAO,CAACC,GAAR,CAAYH,WAAZ,CAHxB;AAAA,0BAKI;AAAQ,IAAA,IAAI,EAAEN,UAAU,CAACM,WAAD,CAAxB;AAAuC,IAAA,CAAC,EAAEL;AAA1C;AAAA;AAAA;AAAA;AAAA,UALJ,eAMI;AAAM,IAAA,CAAC,EAAEE,cAAT;AAAyB,IAAA,EAAE,EAAC,OAA5B;AAAA,cAAsCG;AAAtC;AAAA;AAAA;AAAA;AAAA,UANJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANG;KAAMP,W","sourcesContent":["export const ColorLegend = ({ \n    colorScale, \n    circleRadius, \n    tickSpacing = 20,\n    tickTextOffset = 10 \n}) => \n    colorScale.domain().map((domainValue, i) => (\n        <g \n            className=\"legend\" \n            transform={`translate(0, ${i * tickSpacing})`}\n            onMouseEnter={() => console.log(domainValue)}\n        >\n            <circle fill={colorScale(domainValue)} r={circleRadius} />\n            <text x={tickTextOffset} dy=\".32em\" >{domainValue}</text>\n        </g>\n    ));\n"]},"metadata":{},"sourceType":"module"}